@model OutreachModule.Models.ExaminationCreateModel
@using MvcCheckBoxList.Model
@{
    ViewBag.Title = "Examination";
}
@section Style {
<style>
    .add-other,.remove-other {
            background:none;
            border:none;
        }
    #header-fixed {
        position: fixed;
        padding-top: 10px;
        top: 35px;
        padding-bottom: 10px;
        z-index: 100;
        background: #F8F8F8;
        border: solid 1px grey;
    }
    #body-form {
        margin-top: 110px;
    }
</style>
    }
<div class ="container" id="header-fixed">
    <h4>New Screening</h4>
    <div class="row">
        <div class="col-md-1">
            <img src="@Url.Content("/OutreachModule/ptimages/"+Model.patient.photoPathOrPlaceholder)" alt="@Model.patient.name" style="max-height:100px" class="img-thumbnail" />
        </div>
        <div class="col-md-8">
            <ul class="list-unstyled">
                <li>@Model.patient.mrn</li>
                <li>@Model.patient.name</li>
                <li>@Model.patient.gender, @Model.patient.age</li>
            </ul>
        </div>
        <div class="col-md-3">
            Camp: @Html.DisplayFor(model => model.camp.code), @Html.DisplayFor(model => model.camp.date) <br /><br />
            <label for="submit-form" class="btn btn-default">Save</label>
            <label for="submit-form-discharge" class="btn btn-default">Save & Discharge</label>
        </div>
    </div>
</div>

@using (Html.BeginForm(null, null,FormMethod.Post, new { id = "body-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-12">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Chief Complaints</label>
            <div class="col-md-3">
                <p>R/E</p>
                @Html.CheckBoxListFor(model => model.PostedRightComplaints.ComplaintIds, model => model.AvailableComplaints, entity => entity.Id, entity => entity.Name, model => model.SelectedRightComplaints, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherComplaintsRight)
            </div>
            <div class="col-md-3">
                <p>L/E</p>
                @Html.CheckBoxListFor(model => model.PostedLeftComplaints.ComplaintIds, model => model.AvailableComplaints, entity => entity.Id, entity => entity.Name, model => model.SelectedLeftComplaints, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherComplaintsLeft)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Ocular History</label>
            <div class="col-md-3">
                <p>R/E</p>
                @Html.CheckBoxListFor(model => model.PostedRightOcularHistory.ComplaintIds, model => model.AvailableOcularHistory, entity => entity.Id, entity => entity.Name, model => model.SelectedRightOcularHistory, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherRightOcularHistory)
            </div>
            <div class="col-md-3">
                <p>L/E</p>
                @Html.CheckBoxListFor(model => model.PostedLeftOcularHistory.ComplaintIds, model => model.AvailableOcularHistory, entity => entity.Id, entity => entity.Name, model => model.SelectedLeftOcularHistory, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherLeftOcularHistory)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">History</label>
            <div class="col-md-3">
                <p>Medical</p>
                @Html.CheckBoxListFor(model => model.PostedMedicalHistory.ComplaintIds, model => model.AvailableMedicalHistory, entity => entity.Id, entity => entity.Name, model => model.SelectedMedicalHistory, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherMedicalHistory)
            </div>
            <div class="col-md-3">
                <p>Family</p>
                @Html.CheckBoxListFor(model => model.PostedFamilyHistory.ComplaintIds, model => model.AvailableMedicalHistory, entity => entity.Id, entity => entity.Name, model => model.SelectedFamilyHistory, Position.Vertical)
                @Html.Partial("OtherListPartial", Model.OtherFamilyHistory)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Spectacles</label>
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.spectacles, "true") With spectacles
            </label>
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.spectacles, "false") Without spectacles
            </label>
        </div>
        @Html.HiddenFor(model => model.dateStarted)
        @Html.HiddenFor(model => model.campId)
        @Html.HiddenFor(model => model.patientId)
        @Html.HiddenFor(model => model.examinationID)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" name="Command" class="btn btn-default hidden" id="submit-form" />
                <input type="submit" value="SaveAndDischarge" name="Command" class="btn btn-default hidden" id="submit-form-discharge" />
            </div>
        </div>

    </div>

}

<div>
    @Html.ActionLink("Back", "Patient", "Camp", new { patientId = Model.patientId },null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/blockenterkey.js")
    <script>
        var mes = "@ViewBag.Message";
        if (mes != '') {
            window.alert(mes);
        }
    </script>

    @Scripts.Render("~/scripts/otherlist.js") 
}
