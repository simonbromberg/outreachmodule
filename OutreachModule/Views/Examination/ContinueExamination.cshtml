@model OutreachModule.Models.ExaminationSection2CreateModel

@{
    ViewBag.Title = "Examination";
}

@section Style {
    <style>
        .add-other, .remove-other {
            background: none;
            border: none;
        }

        #header-fixed {
            position: fixed;
            padding: 20px;
            top: 35px;
            z-index: 100;
            background: #F8F8F8;
            border: solid 1px grey;
        }

        #body-form {
            margin-top: 140px;
        }
        .alignment-dropdown {
            width: 100px;
        }
    </style>
}
<div class="container" id="header-fixed">
    <div class="row">
        <h4>Examination Section 2</h4>

        <div class="col-md-1">
            <img src="@Url.Content("/OutreachModule/ptimages/" + Model.exam.Patient.photoPathOrPlaceholder)" alt="@Model.exam.Patient.name" style="max-height:100px" class="img-thumbnail" />
        </div>
        <div class="col-md-8">
            <ul class="list-unstyled">
                <li>@Model.exam.Patient.mrn</li>
                <li>@Model.exam.Patient.name</li>
                <li>@Model.exam.Patient.gender, @Model.exam.Patient.age</li>
            </ul>
        </div>
        <div class="pull-right" style="margin-right:20px;">
            Camp: @Html.DisplayFor(model => model.exam.Camp.code), @Html.DisplayFor(model => model.exam.Camp.date) <br /><br />
            <label for="submit-form" class="btn btn-default">Save</label>
            <label for="submit-form-discharge" class="btn btn-default">Save & Discharge</label>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "body-form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.Partial("VisualAcuityPartial", Model.visualAcuity, new ViewDataDictionary() {TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "visualAcuity" }})
            @Html.Partial("RefractionPartial", Model.refraction, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "refraction" } })
            @Html.Partial("AlignmentPartial", Model.alignment, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "alignment" } })
            @Html.Partial("AnteriorSegment", Model.anteriorSegment, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "anteriorSegment" } })
            @Html.Partial("DiagnosisPartial", Model.diagnosis, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "diagnosis" } })
            @Html.Partial("CommentsPartial", Model.Comments, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "Comments" } })
            @Html.Partial("SpectaclesPartial", Model.spectacles, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "spectacles" } })
            @Html.Partial("CommentsPartial", Model.PatientCounseling, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "PatientCounseling" } })
            @Html.Partial("ReferralPartial", Model.PatientReferral, new ViewDataDictionary() { TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "PatientReferral" } })
            @Html.HiddenFor(model => model.dateStarted)
            @Html.HiddenFor(model => model.examId)
    <input type="submit" value="Save" name="Command" class="btn btn-default hidden" id="submit-form" />
    <input type="submit" value="SaveAndDischarge" name="Command" class="btn btn-default hidden" id="submit-form-discharge" />
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/blockenterkey.js")
    <script>
        var mes = "@ViewBag.Message";
        if (mes != '') {
            window.alert(mes);
        }
    </script>
    <script>
   $(document).ready(function ($) {
    $('.add-other').on('click', function () {
        var self = $(this);
        $.get("./AddOther?name=" + self.attr('id')).done(function (html) {
            var list = self.next(".other-list");
            list.append(html);
            $(".remove-other").on("click", function () {
                var par = $(this).parent().parent();
                par.remove();
            });
        });
    });
   });
    </script>
    <script>
        $("#normal-anterior").click(function () {
            $("#anterior-abnormal-detail").hide();
        });
        $("#abnormal-anterior").click(function () {
            $("#anterior-abnormal-detail").show();
        });
    </script>
    <script>
        $("#spectacles-no").click(function () {
            $("#spectacles-cost").hide();
        });
        $("#spectacles-yes").click(function () {
            $("#spectacles-cost").show();
        });
    </script>
    <script>
        $("#referral-reasons").change(function () {
            var val = $(this).val();
            if (val == @(Model.PatientReferral.otherIndex))
            {
                $("#referral-reason-other").show();
        }
        else {
             $("#referral-reason-other").hide();
        }

        });
        $("#referred-no").click(function () {
            $("#referral-yes-details").hide();
        });
        $("#referred-yes").click(function () {
            $("#referral-yes-details").show();
        });
    </script>

}