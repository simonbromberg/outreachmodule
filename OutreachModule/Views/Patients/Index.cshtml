@model IEnumerable<OutreachModule.Models.Patient>

@{
    ViewBag.Title = "Patients";
}

<h2>Patients</h2>

<div class="row">
    <div class="col-md-8">
        @Html.ActionLink("Create New", "Create")
    </div>
    <div class="col-md-4">
        @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group has-feedback">
                @Html.TextBox("SearchString", null, new { @class = "form-control" })
                <span class="glyphicon glyphicon-search form-control-feedback"></span>
            </div>
            <div class="form-group">
                <button type="submit" value="Search" class="btn btn-default">Search</button>
            </div>
        }
    </div>
</div><br />
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.camp_code).ToHtmlString(), "Index", new { sortOrder = ViewBag.CampSortParm }) @MvcHtmlString.Create(ViewBag.CampSortIcon)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gender)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.camp_code)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gender)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
