@model OutreachModule.Models.Patient


@using (Html.BeginForm(null, null,FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Patient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        @{
        if (ViewBag.CampSelect != null) {
            <div class="form-group">
                @Html.LabelFor(model => model.camp_code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.campId, ViewBag.CampSelect as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.campId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label class="control-label col-md-2">Camp Code</label>
                <div class="col-md-10">
                    <p class="form-control-static">@ViewBag.camp.code</p>
                </div>
            </div>
        }
        }
        <div class="form-group">
            @Html.LabelFor(model => model.mrn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Html.DisplayFor(model => model.mrn)</p>
                @Html.HiddenFor(model => model.mrnId)
                @Html.ValidationMessageFor(model => model.mrn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.gender, (IEnumerable<SelectListItem>)ViewBag.GenderSelect, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    if (Model != null && Model.birthdate != null) {
                        @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @Value = ((DateTime)Model.birthdate).ToString("d MMMM yyyy"), @class = "form-control datepicker" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    }
                }   
                @Html.ValidationMessageFor(model => model.birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control", id = "agefield" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.family_member_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.family_member_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.family_member_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address_1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.block, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.block, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.block, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gram_panchayat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gram_panchayat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gram_panchayat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact_1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact_1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact_1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact_2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.family_contact_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.family_contact_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.family_contact_number, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <p class="control-label col-md-2">Upload image</p>
            <div class="col-md-10">
                <input type="file" name="file" class="form-control" /><br />
                @if (Model != null && Model.photoPath != null)
                {
                    <p>Current:</p>
                    <img src="@Url.Content("/OutreachModule/ptimages/"+Model.photoPath)" alt="@Model.name" style="max-height:150px" />
                    @Html.HiddenFor(m => m.photoPath)
                }
            </div>
        </div>
        @Html.HiddenFor(m => m.dateadded)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
